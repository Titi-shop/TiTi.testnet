import { NextResponse } from "next/server";

/**
 * ‚úÖ API t·∫°o giao d·ªãch thanh to√°n m·ªõi tr√™n Pi Network
 *  - Nh·∫≠n d·ªØ li·ªáu t·ª´ frontend (amount, memo, metadata)
 *  - G·ª≠i ƒë·∫øn ƒë√∫ng endpoint Pi API (mainnet ho·∫∑c sandbox)
 */

export const dynamic = "force-dynamic"; // tr√°nh cache Vercel

export async function POST(req: Request) {
  try {
    const { amount, memo, metadata } = await req.json();

    if (!amount || !memo) {
      return NextResponse.json(
        { success: false, message: "Thi·∫øu amount ho·∫∑c memo" },
        { status: 400 }
      );
    }

    const API_KEY = process.env.PI_API_KEY;
    const isSandbox =
      process.env.PI_ENV === "sandbox" ||
      process.env.PI_API_URL?.includes("/sandbox");

    // ‚úÖ Ch·ªçn ƒë√∫ng endpoint
    const API_URL = isSandbox
      ? "https://api.minepi.com/v2/sandbox/payments"
      : "https://api.minepi.com/v2/payments";

    if (!API_KEY) {
      console.error("‚ùå Thi·∫øu PI_API_KEY trong m√¥i tr∆∞·ªùng!");
      return NextResponse.json(
        { success: false, message: "Thi·∫øu Pi API Key" },
        { status: 500 }
      );
    }

    console.log(`üü¢ [Pi CREATE] G·ª≠i giao d·ªãch m·ªõi t·ªõi ${isSandbox ? "SANDBOX" : "MAINNET"}...`);
    console.log("üì¶ Payload:", { amount, memo, metadata });

    const res = await fetch(API_URL, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Key ${API_KEY}`,
      },
      body: JSON.stringify({ amount, memo, metadata }),
    });

    const resultText = await res.text();
    let result;
    try {
      result = JSON.parse(resultText);
    } catch {
      result = { raw: resultText };
    }

    console.log("‚úÖ [Pi CREATE RESULT]:", res.status, result);

    return NextResponse.json(result, {
      status: res.status,
      headers: { "Access-Control-Allow-Origin": "*" },
    });
  } catch (error: any) {
    console.error("üí• [Pi CREATE ERROR]:", error);
    return NextResponse.json(
      { success: false, message: error.message || "L·ªói t·∫°o giao d·ªãch" },
      { status: 500 }
    );
  }
}
