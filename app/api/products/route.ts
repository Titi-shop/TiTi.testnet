// ==============================
// üîπ POST ‚Äî Th√™m s·∫£n ph·∫©m m·ªõi
// ==============================
export async function POST(req: Request) {
  try {
    // üß© ƒê·ªçc danh s√°ch s·∫£n ph·∫©m th·∫≠t t·ª´ Blob m·ªói l·∫ßn POST
    const { blobs } = await list();
    const file = blobs.find((b) => b.pathname === "products.json");

    let products: any[] = [];
    if (file) {
      const res = await fetch(file.url, { cache: "no-store" });
      products = await res.json();
    }

    // üß© ƒê·ªçc d·ªØ li·ªáu t·ª´ form
    const body = await req.json();
    const { name, price, description, images } = body;

    if (!name || !price) {
      return NextResponse.json(
        { success: false, message: "Thi·∫øu t√™n ho·∫∑c gi√°" },
        { status: 400 }
      );
    }

    const newProduct = {
      id: Date.now(),
      name,
      price,
      description,
      images: images || [],
      createdAt: new Date().toISOString(),
    };

    products.unshift(newProduct);

    // üß© Ghi l·∫°i v√†o Blob th·∫≠t
    await writeProducts(products);

    return NextResponse.json({ success: true, product: newProduct });
  } catch (error) {
    console.error("‚ùå POST Error:", error);
    return NextResponse.json(
      { success: false, message: "L·ªói khi th√™m s·∫£n ph·∫©m" },
      { status: 500 }
    );
  }
}
